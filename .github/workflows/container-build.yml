name: Build and Push Container Images

on:
  # Commenting these out to reduce usage: https://github.com/settings/billing
  #  push:
  #   tags: ['v*']
  #   branches: ['main']
  # release:
  #   types: [published]
  workflow_dispatch: # To publish new containers after a release, visit https://github.com/rolfedh/asciidoc-dita-toolkit/actions/workflows/container-build.yml and select "Run workflow".

env:
  REGISTRY_GHCR: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        dockerfile:
          # - path: "Dockerfile"
          #   suffix: ""
          - path: "Dockerfile.production"
            suffix: "-prod"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY_GHCR }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY_GHCR }}/rolfedh/asciidoc-dita-toolkit${{ matrix.dockerfile.suffix }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=AsciiDoc DITA Toolkit${{ matrix.dockerfile.suffix }}
          org.opencontainers.image.description=CLI tools for processing AsciiDoc files for DITA publishing workflows
          org.opencontainers.image.vendor=Rolfe Dlugy-Hegwer
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.licenses=MIT

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./${{ matrix.dockerfile.path }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test container image
      if: matrix.dockerfile.path == 'Dockerfile.production'
      run: |
        # For PRs, the image is built locally but not pushed, so we need to use the image ID
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          # Use the image ID from the build step
          IMAGE_NAME="${{ steps.build.outputs.imageid }}"
          echo "Testing local image (PR): $IMAGE_NAME"
        else
          # For non-PR events, use the registry tag
          IMAGE_NAME=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          echo "Testing registry image: $IMAGE_NAME"
        fi
        # Test the built image
        docker run --rm $IMAGE_NAME --version || true
        docker run --rm $IMAGE_NAME --help
