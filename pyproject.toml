[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "asciidoc-dita-toolkit"
version = "2.0.5"
description = "AsciiDoc DITA Toolkit - unified package for technical documentation workflows"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "rolfedh", email = "rolfedh@users.noreply.github.com"},
]
maintainers = [
    {name = "rolfedh", email = "rolfedh@users.noreply.github.com"},
]
keywords = ["asciidoc", "dita", "documentation", "technical-writing", "content-validation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "importlib-metadata>=1.0; python_version<'3.8'"
]

[project.urls]
"Homepage" = "https://github.com/rolfedh/asciidoc-dita-toolkit"
"Bug Reports" = "https://github.com/rolfedh/asciidoc-dita-toolkit/issues"
"Source" = "https://github.com/rolfedh/asciidoc-dita-toolkit"
"Documentation" = "https://github.com/rolfedh/asciidoc-dita-toolkit/blob/main/docs/"

[tool.setuptools.packages.find]
where = ["."]
include = ["asciidoc_dita_toolkit*"]
exclude = ["tests*", "build*", "dist*", "*.egg-info*"]

[project.scripts]
adt = "asciidoc_dita_toolkit.adt_core.cli:main"
adg = "asciidoc_dita_toolkit.adt_core.cli:launch_gui"
adt-test-files = "asciidoc_dita_toolkit.adt_core.cli:adt_test_files_main"
asciidoc-dita-toolkit = "asciidoc_dita_toolkit.adt_core.cli:main"
asciidoc-dita-toolkit-gui = "asciidoc_dita_toolkit.adt_core.cli:launch_gui"

[project.entry-points."adt.modules"]
EntityReference = "asciidoc_dita_toolkit.asciidoc_dita.plugins.EntityReference:EntityReferenceModule"
ContentType = "asciidoc_dita_toolkit.asciidoc_dita.plugins.ContentType:ContentTypeModule"
DirectoryConfig = "asciidoc_dita_toolkit.asciidoc_dita.plugins.DirectoryConfig:DirectoryConfigModule"
ContextAnalyzer = "asciidoc_dita_toolkit.asciidoc_dita.plugins.ContextAnalyzer:ContextAnalyzerModule"
ContextMigrator = "asciidoc_dita_toolkit.asciidoc_dita.plugins.ContextMigrator:ContextMigratorModule"
CrossReference = "asciidoc_dita_toolkit.asciidoc_dita.plugins.CrossReference:CrossReferenceModule"
ExampleBlock = "asciidoc_dita_toolkit.asciidoc_dita.plugins.ExampleBlock:ExampleBlockModule"
UserJourney = "modules.user_journey:UserJourney"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
]

[tool.pytest.ini_options]
# Suppress common warnings that don't affect functionality
filterwarnings = [
    "ignore::pytest.PytestReturnNotNoneWarning",
    "ignore::DeprecationWarning:asciidoc_dita_toolkit.*",
]

[tool.black]
# Configure Black for developer-friendly quote handling
skip-string-normalization = true
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude common directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
# Configure flake8 to exclude virtual environment and build directories
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".env",
    "env",
    "build",
    "dist",
    "*.egg-info",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
    "debug_env",
    "archive"
]
max-line-length = 127
max-complexity = 10
# Ignore some common issues in legacy code
extend-ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
]